@model CompanySite.Models.ScheduleDashboardViewModel
@{
    ViewData["Title"] = "Schedules dashboard";
}

<div class="container">
    <h2>Schedules Dashboard</h2>
    
    <div class="row">
        
<div class="col-md-4">
    <div class="frame">
        <h3>Actions</h3>
        <div class="button-group">
            <button class="btn btn-primary" onclick="refreshTable()">
                <span id="refreshText">Refresh Table</span>
                <span id="refreshLoader" class="loading" style="display:none;"></span>
            </button>
            <button class="btn btn-success" onclick="exportToExcel()">Export to Excel</button>
        </div>
    </div>
</div>
        
        <div class="col-md-4">
            <div class="frame">
                <h3>Filters</h3>
                <div class="filter-controls">
                    <label>
                        <input type="checkbox" id="todayOnly" onchange="applyFilters()"> Today's only
                    </label>
                    <label>
                        <input type="radio" name="statusFilter" value="All" checked onchange="applyFilters()"> All
                    </label>
                    <label>
                        <input type="radio" name="statusFilter" value="Errors" onchange="applyFilters()"> Errors
                    </label>
                    <label>
                        <input type="radio" name="statusFilter" value="Running" onchange="applyFilters()"> Running
                    </label>
                    <label>
                        <input type="radio" name="statusFilter" value="To Go" onchange="applyFilters()"> To Go
                    </label>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="frame">
                <h3>Today's Summary</h3>
                <span class="summary-label">Done: <strong id="doneCount">@Model.DoneCount</strong></span>
                <span class="summary-label">To Go: <strong id="toGoCount">@Model.ToGoCount</strong></span>
                <span class="summary-label">Errors: <strong id="errorCount">@Model.ErrorCount</strong></span>
            </div>
        </div>
    </div>
    
    <table class="table table-striped" id="schedulesTable">
        <thead>
            <tr>
                <th>Id</th>
                <th>Machine</th>
                <th>Last Run Date</th>
                <th>Next Run Date</th>
                <th>Last Run Status</th>
                <th>Report</th>
                <th>DB</th>
                <th>Server</th>
                <th>Frequency</th>
                <th>Day or Date</th>
                <th>Output Directory</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var schedule in Model.Schedules)
            {
                <tr>
                    <td>@schedule.Id</td>
                    <td>@schedule.Server</td>
                    <td>@schedule.LastRunDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>@(schedule.NextRunDate?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                    <td>
                        @if (schedule.LastRunState == "Success")
                        {
                            <span class="text-success">@schedule.LastRunState</span>
                        }
                        else if (schedule.LastRunState == "Error")
                        {
                            <span class="text-danger">@schedule.LastRunState</span>
                        }
                        else if (schedule.LastRunState == "Running")
                        {
                            <span class="text-warning">@schedule.LastRunState</span>
                        }
                        else
                        {
                            @schedule.LastRunState
                        }
                    </td>
                    <td>@schedule.ReportName</td>
                    <td>@schedule.ClientDatabase</td>
                    <td>@schedule.ClientServer</td>
                    <td>@schedule.Frequency</td>
                    <td>@(schedule.DayOrDate ?? "")</td>
                    <td>@schedule.OutputDirectory</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function applyFilters() {
            refreshTable(false); // false = don't show alert for filter changes
        }
        
        function refreshTable(showAlert = true) { // default to true for manual clicks
            $('#refreshText').hide();
            $('#refreshLoader').show();
            
            var todayOnly = $('#todayOnly').is(':checked');
            var filter = $('input[name="statusFilter"]:checked').val();
            
            $.post('@Url.Action("RefreshSchedules", "Home")', { todayOnly: todayOnly, filter: filter }, function(response) {
                if (response.success) {
                    var tbody = $('#schedulesTable tbody');
                    tbody.empty();
                    
                    response.data.schedules.forEach(function(schedule) {
                        var lastRunDate = new Date(schedule.lastRunDate).toLocaleString('sv-SE').replace('T', ' ').substring(0, 19);
                        var nextRunDate = schedule.nextRunDate ? new Date(schedule.nextRunDate).toISOString().substring(0, 10) : 'N/A';
                        
                        var statusClass = '';
                        if (schedule.lastRunState === 'Success') statusClass = 'text-success';
                        else if (schedule.lastRunState === 'Error') statusClass = 'text-danger';
                        else if (schedule.lastRunState === 'Running') statusClass = 'text-warning';
                        
                        var row = '<tr>' +
                            '<td>' + schedule.id + '</td>' +
                            '<td>' + schedule.server + '</td>' +
                            '<td>' + lastRunDate + '</td>' +
                            '<td>' + nextRunDate + '</td>' +
                            '<td><span class="' + statusClass + '">' + schedule.lastRunState + '</span></td>' +
                            '<td>' + schedule.reportName + '</td>' +
                            '<td>' + schedule.clientDatabase + '</td>' +
                            '<td>' + schedule.clientServer + '</td>' +
                            '<td>' + schedule.frequency + '</td>' +
                            '<td>' + (schedule.dayOrDate || '') + '</td>' +
                            '<td>' + schedule.outputDirectory + '</td>' +
                            '</tr>';
                        tbody.append(row);
                    });
                    
                    $('#doneCount').text(response.data.doneCount);
                    $('#toGoCount').text(response.data.toGoCount);
                    $('#errorCount').text(response.data.errorCount);
                    
                    // Only show alert if it's a manual refresh
                    if (showAlert) {
                        alert(response.message);
                    }
                }
            }).always(function() {
                $('#refreshText').show();
                $('#refreshLoader').hide();
            });
        }
        
        function exportToExcel() {
            var todayOnly = $('#todayOnly').is(':checked');
            var filter = $('input[name="statusFilter"]:checked').val();
            
            var form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("ExportSchedules", "Home")';
            form.style.display = 'none';
            
            var todayInput = document.createElement('input');
            todayInput.type = 'hidden';
            todayInput.name = 'todayOnly';
            todayInput.value = todayOnly;
            form.appendChild(todayInput);
            
            var filterInput = document.createElement('input');
            filterInput.type = 'hidden';
            filterInput.name = 'filter';
            filterInput.value = filter;
            form.appendChild(filterInput);
            
            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }
    </script>
}